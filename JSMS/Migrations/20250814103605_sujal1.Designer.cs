// <auto-generated />
using JSMS.EfContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JSMS.Migrations
{
    [DbContext(typeof(JSMSEFContext))]
    [Migration("20250814103605_sujal1")]
    partial class sujal1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Apply", b =>
                {
                    b.Property<int>("ApplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplyId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<int>("FdId")
                        .HasColumnType("int");

                    b.Property<int?>("FounderFdId")
                        .HasColumnType("int");

                    b.Property<int>("Post_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Post_Id1")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ApplyId");

                    b.HasIndex("EmpId");

                    b.HasIndex("EmployeeEmpId");

                    b.HasIndex("FounderFdId");

                    b.HasIndex("Post_Id");

                    b.HasIndex("Post_Id1");

                    b.ToTable("Apply", (string)null);

                    b.HasData(
                        new
                        {
                            ApplyId = 1,
                            EmpId = 1,
                            FdId = 0,
                            Post_Id = 1,
                            Status = true
                        });
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("EmpEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpExpriance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpResumeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            EmpId = 1,
                            EmpEducation = "B.Tech",
                            EmpEmail = "rahul@test.com",
                            EmpExpriance = "2 Years",
                            EmpName = "Rahul",
                            EmpResumeUrl = "/resumes/rahul.pdf"
                        });
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Founder", b =>
                {
                    b.Property<int>("FdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FdId"));

                    b.Property<string>("FdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fd_Company_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fd_Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FdId");

                    b.ToTable("Founder", (string)null);

                    b.HasData(
                        new
                        {
                            FdId = 1,
                            FdName = "Rich Danny",
                            Fd_Company_Name = "IT Solution",
                            Fd_Email = "ITSolution2000@gmail.com"
                        });
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Post", b =>
                {
                    b.Property<int>("Post_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Post_Id"));

                    b.Property<int>("FdId")
                        .HasColumnType("int");

                    b.Property<int?>("FounderFdId")
                        .HasColumnType("int");

                    b.Property<int>("Post_Count")
                        .HasColumnType("int");

                    b.Property<string>("Post_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Post_Id");

                    b.HasIndex("FdId");

                    b.HasIndex("FounderFdId");

                    b.ToTable("Post", (string)null);

                    b.HasData(
                        new
                        {
                            Post_Id = 1,
                            FdId = 1,
                            Post_Count = 2,
                            Post_Description = "C# Developer with EF Core experience",
                            Post_Name = "Software Developer"
                        });
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Apply", b =>
                {
                    b.HasOne("JSMS.Models.DataBaseModels.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSMS.Models.DataBaseModels.Employee", "Employee")
                        .WithMany("Applies")
                        .HasForeignKey("EmployeeEmpId");

                    b.HasOne("JSMS.Models.DataBaseModels.Founder", "Founder")
                        .WithMany()
                        .HasForeignKey("FounderFdId");

                    b.HasOne("JSMS.Models.DataBaseModels.Post", null)
                        .WithMany()
                        .HasForeignKey("Post_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSMS.Models.DataBaseModels.Post", "Post")
                        .WithMany("Applies")
                        .HasForeignKey("Post_Id1");

                    b.Navigation("Employee");

                    b.Navigation("Founder");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Post", b =>
                {
                    b.HasOne("JSMS.Models.DataBaseModels.Founder", null)
                        .WithMany()
                        .HasForeignKey("FdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSMS.Models.DataBaseModels.Founder", "Founder")
                        .WithMany("Posts")
                        .HasForeignKey("FounderFdId");

                    b.Navigation("Founder");
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Employee", b =>
                {
                    b.Navigation("Applies");
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Founder", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("JSMS.Models.DataBaseModels.Post", b =>
                {
                    b.Navigation("Applies");
                });
#pragma warning restore 612, 618
        }
    }
}
